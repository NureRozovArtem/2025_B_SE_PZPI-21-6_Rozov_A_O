import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

import NumberMemoryGame from "./NumberMemoryGame";
import WordMemoryGame from "./WordMemoryGame";
import ImageMemoryGame from "./ImageMemoryGame";
import ProfilePage from "./ProfilePage";
import Header from "./Header";


function Dashboard({ onLogout }) {
  const [showProfile, setShowProfile] = useState(false);
  const [showInfo, setShowInfo] = useState(false);
  const [currentGame, setCurrentGame] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const checkToken = async () => {
      try {
        const res = await fetch("http://localhost:8080/api/user/me", {
          headers: {
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
        });

        if (!res.ok) {
          throw new Error("Token invalid or expired");
        }
      } catch (error) {
        console.warn("–ù–µ–¥—ñ–π—Å–Ω–∏–π —Ç–æ–∫–µ–Ω. –í–∏—Ö—ñ–¥ –∑ –∞–∫–∞—É–Ω—Ç—É...");
        localStorage.removeItem("token");
        onLogout();
        navigate("/login");
      }
    };

    checkToken();
  }, [onLogout, navigate]);

  const handleBack = () => {
    setCurrentGame(null);
    setShowProfile(false);
    setShowInfo(false);
  };

  if (currentGame === "number") return <NumberMemoryGame onBack={handleBack} />;
  if (currentGame === "word") return <WordMemoryGame onBack={handleBack} />;
  if (currentGame === "image") return <ImageMemoryGame onBack={handleBack} />;

  if (showProfile) return <ProfilePage onBack={handleBack} onLogout={onLogout} />;

  if (showInfo) {
    return (
      <div>
        <Header />
        <div className="info-page">
          <button className="back" onClick={handleBack}>‚¨Ö –ù–∞–∑–∞–¥</button>
          <h2>–Ø–∫ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –ø–∞–º º—è—Ç—å?</h2>
          <p>
            –ü–∞–º º—è—Ç—å ‚Äî —Ü–µ –∑–¥–∞—Ç–Ω—ñ—Å—Ç—å –º–æ–∑–∫—É –∑–±–µ—Ä—ñ–≥–∞—Ç–∏, –æ–±—Ä–æ–±–ª—è—Ç–∏ —Ç–∞ –≤—ñ–¥—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é. –í–æ–Ω–∞ –±—É–≤–∞—î:
          </p>
          <ul>
            <li><strong>–ö–æ—Ä–æ—Ç–∫–æ—á–∞—Å–Ω–∞ –ø–∞–º º—è—Ç—å</strong> ‚Äî –∑–±–µ—Ä—ñ–≥–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –Ω–∞ –¥–µ–∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥/—Ö–≤–∏–ª–∏–Ω.</li>
            <li><strong>–î–æ–≤–≥–æ—Ç—Ä–∏–≤–∞–ª–∞ –ø–∞–º º—è—Ç—å</strong> ‚Äî –∑–±–µ—Ä—ñ–≥–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –Ω–∞–¥–æ–≤–≥–æ (–≤—ñ–¥ –¥–Ω—ñ–≤ –¥–æ —Ä–æ–∫—ñ–≤).</li>
            <li><strong>–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞ –ø–∞–º º—è—Ç—å</strong> ‚Äî –¥–æ–∑–≤–æ–ª—è—î —Ç–∏–º—á–∞—Å–æ–≤–æ —É—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –ø—ñ–¥ —á–∞—Å –º–∏—Å–ª–µ–Ω–Ω—è.</li>
          </ul>
          <p>–©–æ–± –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –ø–∞–º º—è—Ç—å, –∫–æ—Ä–∏—Å–Ω–æ:</p>
          <ul>
            <li>–†–µ–≥—É–ª—è—Ä–Ω–æ —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏ –º–æ–∑–æ–∫ (—ñ–≥—Ä–∏, –∑–∞–¥–∞—á—ñ, –≤–ø—Ä–∞–≤–∏).</li>
            <li>–ó–¥–æ—Ä–æ–≤–æ —Å–ø–∞—Ç–∏ —Ç–∞ —Ö–∞—Ä—á—É–≤–∞—Ç–∏—Å—å.</li>
            <li>–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∞—Å–æ—Ü—ñ–∞—Ü—ñ—ó —Ç–∞ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—é.</li>
          </ul>
          <p>–ù–∞ —Ü—å–æ–º—É —Å–∞–π—Ç—ñ —Ç–∏ –º–æ–∂–µ—à —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏ –ø–∞–º º—è—Ç—å —á–µ—Ä–µ–∑ —ñ–≥—Ä–∏:</p>
          <ul>
            <li><strong>–ß–∏—Å–ª–æ–≤–∞ –ø–∞–º º—è—Ç—å</strong> ‚Äî –∑–∞–ø–∞–º º—è—Ç–æ–≤—É–π –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ —á–∏—Å–µ–ª.</li>
            <li><strong>–ü–∞–º º—è—Ç—å –Ω–∞ —Å–ª–æ–≤–∞</strong> ‚Äî –∑–≥–∞–¥—É–π –∑–∞–ø–∞–º º—è—Ç–æ–≤–∞–Ω—ñ —Å–ª–æ–≤–∞.</li>
            <li><strong>–ü–∞–º º—è—Ç—å –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</strong> ‚Äî —Ç—Ä–µ–Ω—É–π –∑–æ—Ä–æ–≤—É –ø–∞–º º—è—Ç—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–∞—Ä—Ç–∏–Ω–æ–∫.</li>
          </ul>
          <p>–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü—ñ —ñ–≥—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ ‚Äî —ñ —Ç–≤–æ—è –ø–∞–º º—è—Ç—å –ø–æ–∫—Ä–∞—â–∏—Ç—å—Å—è!</p>
        </div>
      </div>
    );
  }

  return (
    <div>
      <Header
        showTopBar={true}
        setShowProfile={setShowProfile}
        setShowInfo={setShowInfo}
      />
      <div className="dashboard">
        <div className="main-content">
          <h1>–ü–æ–∫—Ä–∞—â—É–π —Å–≤–æ—é –ø–∞–º‚Äô—è—Ç—å!</h1>
          <div className="game-buttons">
            <button className="game-btn" onClick={() => setCurrentGame("number")}>üî¢ –ß–∏—Å–ª–∞</button>
            <button className="game-btn" onClick={() => setCurrentGame("word")}>üß† –°–ª–æ–≤–∞</button>
            <button className="game-btn" onClick={() => setCurrentGame("image")}>üé® –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è</button>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Dashboard;
